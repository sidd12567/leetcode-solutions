/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        if(root==null){
            return ans;
        }
        q.add(root);
        boolean ltr=true;
        while(!q.isEmpty()){
            int si=q.size();
            Deque<Integer> aa = new LinkedList<>();
            for(int i=0;i<si;i++){
                root=q.poll();
                if(ltr){
                    aa.addLast(root.val);
                } else{
                    aa.addFirst(root.val);
                }
               
                if(root.left!=null){
                    q.add(root.left);
                }
                if(root.right!=null){
                    q.add(root.right);
                }
            }
            ltr=!ltr;
            ans.add(new ArrayList<>(aa));
            

        }
        return ans;
    }
}
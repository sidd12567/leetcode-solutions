class Solution {
    void findc(int ind, List<Integer> ds, int target, List<List<Integer>> ans, int[] candidates ){
        if(ind==candidates.length){
            if(target==0){
                ans.add(new ArrayList<>(ds));
            }
            return;
        }
        if(candidates[ind]<=target){
            ds.add(candidates[ind]);
            findc(ind, ds, target-candidates[ind], ans, candidates);
            ds.remove(ds.size()-1);
        }
        findc(ind+1, ds, target, ans, candidates);
        
    }
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> ds = new ArrayList<>();

        findc(0, ds, target, ans, candidates);
        return ans;
    }
}
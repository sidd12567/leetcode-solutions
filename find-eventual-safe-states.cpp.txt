class Solution {
public:
    
    vector<int> eventualSafeNodes(vector<vector<int>>& graph) {
        vector<int> ans;
        int n=graph.size();
        int i=0;
        vector<int> ind(n);
        vector<vector<int>> adj(n);
        for(auto it:graph){
            for(auto ii:it){
                adj[ii].push_back(i);
                ind[i]++;
            }
            i++;
        }
        queue<int> q;
        for(int i=0;i<n;i++){
            if(ind[i]==0){
                q.push(i);
                
            }
        }
        while(!q.empty()){
            int node=q.front();
            q.pop();
            ans.push_back(node);
            for(auto jk:adj[node]){
                if(--ind[jk]==0){
                    q.push(jk);
                }
            }
        }
        sort(ans.begin(),ans.end());
        return ans;
        
    }
};
class Solution {
public:
void dfs(int no, vector<int> adj[], vector<int> &vis){
    vis[no]=1;
    for(auto it:adj[no]){
        if(!vis[it]){
            dfs(it, adj, vis);
        }
    }
}
    int findCircleNum(vector<vector<int>>& isConnected) {
        int siz=isConnected.size();
       
        vector<int> adj[siz];
        for(int i=0;i<siz;i++){
            for(int j=0;j<siz;j++){
                if(i!=j && isConnected[i][j]==1){
                    adj[i].push_back(j);
                    adj[j].push_back(i);
                }
            }
            
        }
        int ans=0;
        vector<int> vis(siz,0);
        for(int i=0;i<siz;i++){
            if(!vis[i]){
                ans++;
                dfs(i, adj, vis);
            }
        }
        return ans;
    }
};
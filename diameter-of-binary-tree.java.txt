/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int diameterOfBinaryTree(TreeNode root) {
        int[] di= new int[1];
        dia(root, di);
        return di[0];
    }
    public int dia(TreeNode root, int[] di){
        if(root==null){
            return 0;
        }
        int lh=dia(root.left, di);
        int rh=dia(root.right, di);
        di[0]=Math.max(di[0], lh+rh);
        return Math.max(lh, rh)+1;
    }
}